[{"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\index.tsx":"1","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\App.tsx":"3","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\Home.tsx":"4","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentIndex.tsx":"5","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentCreate.tsx":"6","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitIndex.tsx":"7","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentTable.tsx":"8","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitEdit.tsx":"9","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentEdit.tsx":"10","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitPost.tsx":"11","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Login.tsx":"12","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitTable.tsx":"13","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Register.tsx":"14","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\home.tsx":"15","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\SideDrawer.tsx":"16"},{"size":516,"mtime":1610681646141,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1379,"mtime":1610686372809,"results":"20","hashOfConfig":"18"},{"size":3619,"mtime":1610686637598,"results":"21","hashOfConfig":"18"},{"size":3283,"mtime":1610717587261,"results":"22","hashOfConfig":"18"},{"size":6314,"mtime":1610717541606,"results":"23","hashOfConfig":"18"},{"size":2908,"mtime":1610717668177,"results":"24","hashOfConfig":"18"},{"size":2092,"mtime":1610717596307,"results":"25","hashOfConfig":"18"},{"size":3515,"mtime":1610717655084,"results":"26","hashOfConfig":"18"},{"size":4421,"mtime":1610717571990,"results":"27","hashOfConfig":"18"},{"size":8335,"mtime":1610717677458,"results":"28","hashOfConfig":"18"},{"size":2904,"mtime":1610686637598,"results":"29","hashOfConfig":"18"},{"size":2148,"mtime":1610717689709,"results":"30","hashOfConfig":"18"},{"size":3555,"mtime":1610686679128,"results":"31","hashOfConfig":"18"},{"size":3585,"mtime":1610717634347,"results":"32","hashOfConfig":"18"},{"size":7628,"mtime":1610717073923,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1c0c9t2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\index.tsx",[],["76","77"],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\App.tsx",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\Home.tsx",["78"],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentIndex.tsx",["79"],"import React from 'react';\r\nimport CommentCreate from './CommentCreate';\r\nimport CommentEdit from './CommentEdit';\r\nimport CommentTable from './CommentTable';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\ntype Props = {\r\n    token: string;\r\n    // updateToken: (newToken: string) => void,\r\n    // clearToken: () => void,\r\n}\r\n\r\ntype State = {\r\n    myComments: any,\r\n    commentUpdate: any,\r\n    updateActive: boolean,\r\n}\r\n\r\nexport default class SubmitIndex extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            myComments: [],\r\n            commentUpdate: {},\r\n            updateActive: false,\r\n        }\r\n    }\r\n\r\n    fetchComments = () => {\r\n        console.log(this.props.token);\r\n        fetch(`http://localhost:4000/comment/mine`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `${localStorage.getItem(\"token\")}`,\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((subData) => {\r\n                this.setState({\r\n                    myComments: subData\r\n                })\r\n                console.log(\"Comments\", this.state.myComments)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchComments()\r\n    }\r\n\r\n    editUpdateComments = (comments: any) => {\r\n        this.setState({\r\n            commentUpdate: comments\r\n        })\r\n    }\r\n\r\n    editCreateComments = (comments: any) => {\r\n        this.setState({\r\n            commentUpdate: comments\r\n        })\r\n    }\r\n\r\n    updateOn = () => {\r\n        this.setState({\r\n            updateActive: true\r\n        })\r\n    }\r\n\r\n    updateOff = () => {\r\n        this.setState({\r\n            updateActive: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Container\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                            {/* <CommentCreate\r\n                                token={this.props.token}\r\n                                // updateToken={this.props.updateToken}\r\n                                // clearToken={this.props.clearToken}\r\n                            \r\n                            /> : <> </> */}\r\n                            <CommentTable\r\n                                myComments={this.state.myComments}\r\n                                editUpdateComments={this.editUpdateComments.bind(this)}\r\n                                updateOn={this.updateOn.bind(this)}\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                                token={this.props.token}\r\n                        />\r\n                        {this.state.updateActive ?\r\n                            <CommentEdit\r\n                                commentUpdate={this.state.commentUpdate}\r\n                                updateOff={this.updateOff.bind(this)}\r\n                                token={this.props.token}\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                            />\r\n                            : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentCreate.tsx",["80","81","82","83"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    FormLabel,\r\n    FormControl,\r\n    InputLabel,\r\n    Box,\r\n    TextField,\r\n    Dialog,\r\n    DialogContent,\r\n   DialogActions,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from '../Components/Home/home';\r\nimport './Comment.css';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\n\r\n\r\ninterface Props {\r\n    token: string,\r\n    subId: number\r\n    // key: number,\r\n    // updateToken: (newToken: string) => void,\r\n    // clearToken: () => void,\r\n}\r\n\r\ntype State = {\r\n    username: string;\r\n    date: string;\r\n    entry: string;\r\n    rating: number;\r\n    submissionId: number;\r\n    handleopen: boolean;\r\n}\r\n\r\nexport default class CommentCreate extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            date: \"\",\r\n            entry: \"\",\r\n            rating: 0,\r\n            submissionId: 0,\r\n            handleopen: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        fetch(`http://localhost:4000/comment/create/${this.props.subId}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                date: this.state.date,\r\n                entry: this.state.entry,\r\n                rating: this.state.rating,\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                username: '',\r\n                date: '',\r\n                entry: '',\r\n                rating: 0,\r\n            })\r\n            this.handleClose();\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n        console.log('props:', this.props)\r\n        console.log('state:', this.state)\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    setUsername(event: string) {\r\n        this.setState({\r\n            username: (event)\r\n        })\r\n    }\r\n\r\n    setDate(event: string) {\r\n        this.setState({\r\n            date: (event)\r\n        })\r\n    }\r\n\r\n    setEntry(event: string) {\r\n        this.setState({\r\n            entry: (event)\r\n        })\r\n    }\r\n\r\n    setRating(event: number) {\r\n        this.setState({\r\n            rating: (event)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                    <Button onClick={this.handleOpen} id=\"CreateBtn\" variant=\"outlined\" >Comment</Button>\r\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\r\n                    <DialogContent id=\"comments\">\r\n                        <Typography variant=\"h6\" id=\"dialogTitle\"><strong>Comment</strong></Typography>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"Username\" id=\"titleLabel\">Username</InputLabel>\r\n                            <TextField\r\n                                id=\"titleInput\"\r\n                                name=\"title\"\r\n                                value={this.state.username}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => this.setUsername(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"date\" id=\"dateLabel\">Date</InputLabel>\r\n                            <TextField\r\n                                id=\"dateInput\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                defaultValue=\"01/13/2021\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={(e) => this.setDate(e.target.value)}\r\n                            >Date</TextField>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"entry\" id=\"entryLabel\">Entry</InputLabel>\r\n                            <TextField\r\n                                name={this.state.entry}\r\n                                multiline rowsMax={6}\r\n                                variant=\"outlined\"\r\n                                id=\"entryInput\"\r\n                                onChange={(e) => this.setEntry(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormControl component=\"fieldset\" id=\"ratingLabel\">\r\n                            <FormLabel component=\"legend\" id=\"ratingLabel\"><strong>Rating</strong></FormLabel>\r\n                            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" id=\"ratingsBox\">\r\n                                <Rating\r\n                                    name=\"rating\"\r\n                                    value={this.state.rating}\r\n                                    onChange={(e, newValue) =>\r\n                                        this.setState({ rating: Number(newValue) })\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions id=\"commentBtns\">\r\n                        <Box justifyContent=\"center\">\r\n                            <Button onClick={this.handleClose} className=\"createReviewButton\">\r\n                                <SkipPreviousIcon id=\"backIcon\" />{\" \"}{\" \"}Back</Button>\r\n                            <Button type=\"submit\" className=\"createReviewButton\" id=\"submitButton\"onClick={this.handleSubmit} ><strong>Submit Comment</strong></Button>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </Dialog>\r\n              \r\n            </div >\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitIndex.tsx",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentTable.tsx",["84"],"import React from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\n\r\n\r\ntype Props = {\r\n    myComments: Array<{\r\n        id: number;\r\n        username: string;\r\n        date: string;\r\n        entry: string;\r\n        rating: number;\r\n        userId: number;\r\n    }>,\r\n    editUpdateComments: (submission: any) => void,\r\n    updateOn: () => void,\r\n    fetchComments: () => void,\r\n    token: string\r\n}\r\n\r\nexport default class submissionTable extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    commentDelete = (comment: any) => {\r\n        fetch(`http://localhost:4000/comment/${comment.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchComments())\r\n    };\r\n\r\n        render () {\r\n            return (\r\n                <div>\r\n                {this.props.myComments\r\n                ? this.props.myComments.map((myComments) => (\r\n                    <Card key={myComments.id}>\r\n                        <CardContent>{myComments.username}</CardContent>\r\n                        <CardContent>{myComments.date}</CardContent>\r\n                        <CardContent>{myComments.entry}</CardContent>\r\n                        <CardContent>{myComments.rating}</CardContent>\r\n                        <CardContent>\r\n                            <IconButton onClick={() => { this.props.editUpdateComments(myComments); this.props.updateOn() }}><CreateIcon /></IconButton>\r\n                            <IconButton className=\"delete-btn\" onClick={() => { this.commentDelete(myComments)}} ><ClearIcon /></IconButton>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))\r\n                : undefined} \r\n                </div>  \r\n            )\r\n        }\r\n}\r\n","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitEdit.tsx",["85"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\n\r\n\r\ntype Props = {\r\n    fetchSubs: () => void,\r\n    updateOff: () => void,\r\n    token: string,\r\n    submissionUpdate: any,\r\n}\r\n\r\ntype State = {\r\n    title: string;\r\n    date: string;\r\n    entry: string;\r\n    handleopen: boolean,\r\n    \r\n}\r\n\r\nexport default class SubmissionEdit extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.submissionUpdate.title,\r\n            date: this.props.submissionUpdate.date,\r\n            entry: this.props.submissionUpdate.entry,\r\n            handleopen: false,\r\n           \r\n        }\r\n    }\r\n\r\n    handleUpdate = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        fetch(`http://localhost:4000/submission/update/${this.props.submissionUpdate.id}`, {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            }),\r\n            body: JSON.stringify({title: this.state.title, date: this.state.date, entry: this.state.entry})\r\n        }) .then(() => {\r\n            this.props.updateOff();\r\n            this.props.fetchSubs();\r\n            \r\n        }) \r\n     \r\n    };\r\n\r\n\r\n    closeUpdate = () => {\r\n        this.props.updateOff();\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (    \r\n            <div className=\"editContainer\">\r\n                <Dialog open={true} >\r\n                    <DialogTitle id=\"dialogTitle\">Update Submission<IconButton className=\"exit-btn-post-edit\" onClick={this.closeUpdate}><ClearIcon /></IconButton></DialogTitle>\r\n                    <DialogContent id=\"Edit\" >\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit title\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.title}\r\n                            onChange={(event) => this.setState({title: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit date\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.date}\r\n                            onChange={(event) => this.setState({date: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit entry\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.entry}\r\n                            onChange={(event) => {this.setState({entry: event.target.value})}}\r\n                        />\r\n                    </DialogContent>\r\n                    <Button type=\"submit\" id=\"btn\" onClick={this.handleUpdate}>Update Here</Button>\r\n             \r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Comments\\CommentEdit.tsx",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitPost.tsx",["86"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    FormLabel,\r\n    FormControl,\r\n    InputLabel,\r\n    Box,\r\n    TextField,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n   DialogActions,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport './Style.css';\r\n\r\ninterface Props {\r\n    token: string,\r\n    fetchSubs: () => void,\r\n}\r\n\r\ntype State = {\r\n    title: string;\r\n    date: string;\r\n    entry: string;\r\n    file: string;\r\n    handleopen: boolean;\r\n}\r\n\r\nexport default class SubmissionCreate extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            date: \"\",\r\n            entry: \"\",\r\n            file: \"\",\r\n            handleopen: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        const subData = new FormData();\r\n        subData.append('image', this.state.file)\r\n        subData.append('title', this.state.title)\r\n        subData.append('date', this.state.date)\r\n        subData.append('entry', this.state.entry)\r\n        fetch(`http://localhost:4000/submission/create`, {\r\n            method: 'POST',\r\n            body: subData, \r\n            headers: new Headers({\r\n                // 'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((subData) => {\r\n                this.setState({\r\n                    title: '',\r\n                    date: '',\r\n                    entry: '',\r\n                })\r\n                this.props.fetchSubs();\r\n                this.handleClose();\r\n            })\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    setTitle(event: string) {\r\n        this.setState({\r\n            title: (event)\r\n        })\r\n    }\r\n\r\n    setDate(event: string) {\r\n        this.setState({\r\n            date: (event)\r\n        })\r\n    }\r\n\r\n    setEntry(event: string) {\r\n        this.setState({\r\n            entry: (event)\r\n        })\r\n    }\r\n\r\n    singleFileChangedHandler = (event: any) => {\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                    <Button onClick={this.handleOpen} id=\"Creepy\" variant=\"outlined\" >Create A Creepy Submissison</Button>\r\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\r\n                    <DialogTitle id=\"dialogTitle\">\r\n                        <strong>Submit if you Dare!</strong>\r\n                    </DialogTitle>\r\n                    <DialogContent id=\"Submission\">\r\n                       \r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"title\" id=\"titleLabel\"><strong>Title</strong></InputLabel>\r\n                            <TextField\r\n                                id=\"titleInput\"\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => this.setTitle(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"date\" id=\"dateLabel\"><strong>Date</strong></InputLabel>\r\n                            <TextField\r\n                                id=\"dateInput\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                defaultValue=\"1982-05-10\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={(e) => this.setDate(e.target.value)}\r\n                            >Date</TextField>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"entry\" id=\"entryLabel\"><strong>Entry</strong></InputLabel>\r\n                            <TextField\r\n                                name={this.state.entry}\r\n                                multiline rowsMax={6}\r\n                                variant=\"outlined\"\r\n                                id=\"entryInput\"\r\n                                onChange={(e) => this.setEntry(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormControl component=\"fieldset\" id=\"ratingLabel\">\r\n                            <FormLabel component=\"legend\" id=\"ratingLabel\"><strong>Image</strong></FormLabel>\r\n                            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" id=\"ratingsBox\">\r\n                            <input\r\n                            accept=\"image/*\"\r\n                            className=\"inputImage\"\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.singleFileChangedHandler}\r\n                        />\r\n                            </Box>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions id=\"commentBtns\">\r\n                    <Box justifyContent=\"center\">\r\n                            <Button onClick={this.handleClose} className=\"createReviewButton\">\r\n                                <SkipPreviousIcon id=\"backIcon\" />{\" \"}{\" \"}Back</Button>\r\n                            <Button type=\"submit\" className=\"createReviewButton\" id=\"submitButton\"onClick={this.handleSubmit}><strong>Enter</strong></Button>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </Dialog>\r\n              \r\n            </div >\r\n            // <div className=\"container\">\r\n            //     <Button onClick={this.handleOpen} id=\"CreateButton\" variant=\"outlined\" >Create a Creepy Submission</Button>\r\n            //     <Dialog\r\n            //         fullWidth\r\n            //         open={this.state.handleopen}\r\n            //         onClose={this.handleClose}\r\n            //         aria-labelledby=\"scroll-dialog-title\"\r\n            //         aria-describedby=\"scroll-dialog-description\"\r\n            //     >\r\n            //             <DialogTitle id=\"scroll-dialog-title\">Create Submission</DialogTitle>\r\n            //         <DialogContent id=\"Create\">\r\n            //             <TextField\r\n            //                 margin=\"dense\"\r\n            //                 label=\"Title\"\r\n            //                 type=\"text\"\r\n            //                 fullWidth\r\n            //                 onChange={(e) => this.setTitle(e.target.value)}\r\n            //             />\r\n            //             <TextField\r\n            //                 margin=\"dense\"\r\n            //                 label=\"Date\"\r\n            //                 type=\"text\"\r\n            //                 fullWidth\r\n            //                 onChange={(e) => this.setDate(e.target.value)}\r\n            //             />\r\n            //             <TextField\r\n            //                 margin=\"dense\"\r\n            //                 label=\"Entry\"\r\n            //                 type=\"text\"\r\n            //                 fullWidth\r\n            //                 onChange={(e) => this.setEntry(e.target.value)}\r\n            //             />\r\n            //             <input\r\n            //                 accept=\"image/*\"\r\n            //                 className=\"inputImage\"\r\n            //                 id=\"contained-button-file\"\r\n            //                 type=\"file\"\r\n            //                 onChange={this.singleFileChangedHandler}\r\n            //             />\r\n            //         </DialogContent>\r\n            //         <DialogActions id=\"Createbtn\">\r\n            //             <Button onClick={this.handleSubmit} id=\"btn\">Submit</Button>\r\n            //         </DialogActions>\r\n            //     </Dialog>\r\n            // </div>\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Login.tsx",[],["87","88"],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Submissions\\SubmitTable.tsx",["89","90"],"import React from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BorderColorOutlinedIcon from '@material-ui/icons/BorderColorOutlined';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport'./Style.css';\r\n\r\n\r\n\r\ntype Props = {\r\n    mySubs: Array<{\r\n        id: number;\r\n        title: string;\r\n        date: string;\r\n        entry: string;\r\n        imageUrl: string;\r\n    }>,\r\n    editUpdateSubmits: (submission: any) => void,\r\n    updateOn: () => void,\r\n    fetchSubs: () => void,\r\n    token: string\r\n\r\n}\r\n\r\nexport default class submissionTable extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    submissionDelete = (submission: any) => {\r\n        fetch(`http://localhost:4000/submission/delete/${submission.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchSubs())\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n            {this.props.mySubs\r\n            ? this.props.mySubs.map((mySubs) => (\r\n                <Card key={mySubs.id} id=\"CardTable\">\r\n                    <CardContent><img src={mySubs.imageUrl} width=\"50%\" height=\"50%\" /></CardContent>\r\n                    <CardContent>{mySubs.title}</CardContent>\r\n                    <CardContent>{mySubs.date}</CardContent>\r\n                    <CardContent>{mySubs.entry}</CardContent>\r\n                    <CardContent>\r\n                        <IconButton id=\"editBtn\" onClick={() => { this.props.editUpdateSubmits(mySubs); this.props.updateOn() }}><BorderColorOutlinedIcon /></IconButton>\r\n                        <IconButton id=\"deleteBtn\" onClick={() => { this.submissionDelete(mySubs)}} ><DeleteOutlineIcon /></IconButton>\r\n                        <hr />\r\n                    </CardContent>\r\n                </Card>\r\n            ))\r\n            : undefined} \r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Register.tsx",[],"C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\home.tsx",["91"],"import React from 'react';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AppBar from './SideDrawer';\r\nimport SubmitIndex from '../../Submissions/SubmitIndex';\r\nimport CommentIndex from '../../Comments/CommentIndex';\r\nimport CommentCreate from '../../Comments/CommentCreate';\r\nimport './Home.css';\r\n\r\ninterface Props {\r\n    updateToken: (newToken: string) => void;\r\n    clearToken: () => void;\r\n    token: string,\r\n}\r\n\r\ntype State = {\r\n    allSubs: Array<{\r\n        id: number;\r\n        title: string;\r\n        date: string;\r\n        entry: string;\r\n        imageUrl: string;\r\n        userId: number;\r\n    }>,\r\n    handleopen: boolean,\r\n    submissionCreate: any,\r\n    fetchSubs: any,\r\n}\r\n\r\nexport default class SubmissionIndex extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            allSubs: [],\r\n            handleopen: false,\r\n            submissionCreate: {},\r\n            fetchSubs: '',\r\n        }\r\n    }\r\n\r\n    fetchSubmissions = () => {\r\n        fetch(`http://localhost:4000/submission/`, {\r\n            method: 'GET',\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    allSubs: data\r\n                })\r\n                console.log(\"response\", data);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSubmissions();\r\n        console.log('props: ', this.props)\r\n        console.log('state: ', this.state)\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Router>\r\n                    <div className=\"Home\">\r\n                        <AppBar  updateToken={this.props.updateToken} token={this.props.token} clearToken={this.props.clearToken}/>\r\n                        <CommentIndex token={this.props.token} />\r\n                        <SubmitIndex token={this.props.token} />\r\n                    </div>\r\n                </Router>\r\n                <div className=\"CardCenter\">\r\n                    {/* <CardContent> */}\r\n                        {this.state.allSubs.map(allSubs => {\r\n                            return (\r\n                                <Card key={allSubs.id} id=\"CardTable\">\r\n                                    <CardContent><img src={allSubs.imageUrl} width=\"50%\" height=\"50%\"/> </CardContent>\r\n                                    <CardContent ><strong>{allSubs.title}</strong></CardContent>\r\n                                    <CardContent >{allSubs.entry}</CardContent>\r\n                                    <CardContent >{allSubs.date}</CardContent>\r\n                                    <CommentCreate subId={allSubs.id} token={this.props.token} />\r\n                                    <CardActions>\r\n                                    {/* <Button onClick={this.handleOpen} id=\"CreateBtn\" variant=\"outlined\" >Comment</Button> */}\r\n                                    </CardActions>   \r\n                                   \r\n                                </Card>\r\n                            )\r\n                        })};\r\n                    {/* </CardContent> */}\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\OneDrive\\Desktop\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\SideDrawer.tsx",["92","93","94","95","96","97","98","99","100"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Button from '@material-ui/core/Button';\r\nimport Login from '../Auth/Login';\r\nimport Register from '../Auth/Register';\r\nimport {\r\n    Route,\r\n    Link,\r\n    Switch\r\n} from 'react-router-dom';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\nimport Home from './home';\r\nimport { render } from '@testing-library/react';\r\nimport SubmitIndex from '../../Submissions/SubmitIndex';\r\nimport CommentIndex from '../../Comments/CommentIndex';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.appBar + 1000,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\ntype Props = {\r\n    token: string;\r\n    clearToken: () => void;\r\n    updateToken: (newToken: string) => void;\r\n   \r\n}\r\n\r\ntype State = {\r\n    open: boolean,\r\n    register: boolean;\r\n    login: boolean;\r\n    theme: any,\r\n}\r\n\r\nclass SideDrawer extends React.Component<Props, State> {\r\n    state = {\r\n        open: false,\r\n        register: false,\r\n        login: false,\r\n        theme: '',\r\n        \r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ \r\n            open: true \r\n        });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ \r\n            open: false \r\n        });\r\n    };\r\n\r\n    handleOpenReg = () => {\r\n        this.setState({\r\n          register: true,\r\n        });\r\n      };\r\n  \r\n      handleOpenLog = () => {\r\n        this.setState({\r\n          login: true,\r\n        })\r\n      }\r\n  \r\n      HandleCloseReg = () => {\r\n        this.setState({\r\n          register: false,\r\n        })\r\n      }\r\n  \r\n      handleCloseLog = () => {\r\n        this.setState({\r\n          login: false,\r\n        })\r\n      }\r\n    render() {\r\n\r\n        const { open } = this.state;\r\n        return(\r\n        <div className =\"sideDrawer\" >\r\n            <CssBaseline />\r\n            <AppBar\r\n                id=\"appBar\"\r\n                position=\"fixed\"\r\n            >\r\n                <Toolbar id='toolbar'>\r\n                    <Grid item xs={4} id=\"routerButton\">\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            \r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={4} id='title'>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n            >\r\n                <div className=\"drawerHeader\">\r\n                    <IconButton onClick={this.handleDrawerClose}>\r\n                       \r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <Link to=\"/\" className=\"links\" >\r\n                        <ListItem button >\r\n                            <ListItemIcon>\r\n                                <HomeIcon className=\"sideIcons\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText>Home</ListItemText>\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/SubmitIndex\" className=\"links\" >\r\n                        <ListItem button >\r\n                            <ListItemIcon>\r\n                                <CommentIcon className=\"sideIcons\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText>Submission Archives</ListItemText>\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to=\"/CommentIndex\" className=\"links\" >\r\n                        <ListItem button >\r\n                            <ListItemIcon>\r\n                                <ForumOutlinedIcon className=\"sideIcons\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText>Comment Archives</ListItemText>\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n            <Switch>\r\n                <Route exact path=\"/\"><Home token={this.props.token} updateToken={this.props.updateToken} clearToken={this.props.clearToken}/></Route>\r\n                <Route exact path=\"/Subission Archives\" render={() => (<SubmitIndex token={this.props.token}/>)} />\r\n                <Route exact path=\"/Comment\" render={() => (<CommentIndex token={this.props.token}/>)} />\r\n            </Switch>\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":90,"column":50,"nodeType":"107","endLine":90,"endColumn":104},{"ruleId":"108","severity":1,"message":"109","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":15,"column":26,"nodeType":"110","messageId":"111","endLine":15,"endColumn":32},{"ruleId":"108","severity":1,"message":"113","line":15,"column":34,"nodeType":"110","messageId":"111","endLine":15,"endColumn":39},{"ruleId":"108","severity":1,"message":"114","line":15,"column":41,"nodeType":"110","messageId":"111","endLine":15,"endColumn":47},{"ruleId":"108","severity":1,"message":"115","line":16,"column":8,"nodeType":"110","messageId":"111","endLine":16,"endColumn":12},{"ruleId":"116","severity":1,"message":"117","line":24,"column":5,"nodeType":"118","messageId":"119","endLine":26,"endColumn":6},{"ruleId":"120","severity":1,"message":"121","line":42,"column":9,"nodeType":"122","messageId":"123","endLine":49,"endColumn":17,"fix":"124"},{"ruleId":"108","severity":1,"message":"125","line":14,"column":5,"nodeType":"110","messageId":"111","endLine":14,"endColumn":15},{"ruleId":"101","replacedBy":"126"},{"ruleId":"103","replacedBy":"127"},{"ruleId":"116","severity":1,"message":"117","line":26,"column":5,"nodeType":"118","messageId":"119","endLine":28,"endColumn":6},{"ruleId":"105","severity":1,"message":"106","line":47,"column":34,"nodeType":"107","endLine":47,"endColumn":88},{"ruleId":"105","severity":1,"message":"106","line":89,"column":50,"nodeType":"107","endLine":89,"endColumn":104},{"ruleId":"108","severity":1,"message":"128","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},{"ruleId":"108","severity":1,"message":"125","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":18},{"ruleId":"108","severity":1,"message":"129","line":12,"column":8,"nodeType":"110","messageId":"111","endLine":12,"endColumn":19},{"ruleId":"108","severity":1,"message":"130","line":14,"column":8,"nodeType":"110","messageId":"111","endLine":14,"endColumn":23},{"ruleId":"108","severity":1,"message":"131","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":24},{"ruleId":"108","severity":1,"message":"132","line":21,"column":8,"nodeType":"110","messageId":"111","endLine":21,"endColumn":14},{"ruleId":"108","severity":1,"message":"133","line":22,"column":8,"nodeType":"110","messageId":"111","endLine":22,"endColumn":13},{"ruleId":"108","severity":1,"message":"134","line":23,"column":8,"nodeType":"110","messageId":"111","endLine":23,"endColumn":16},{"ruleId":"108","severity":1,"message":"135","line":33,"column":10,"nodeType":"110","messageId":"111","endLine":33,"endColumn":16},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'CommentCreate' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Home' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"138","text":"139"},"'Typography' is defined but never used.",["136"],["137"],"'clsx' is defined but never used.","'ButtonGroup' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'Button' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",[1377,1379],"."]