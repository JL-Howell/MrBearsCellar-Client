[{"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\index.tsx":"1","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\App.tsx":"3","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\helpers\\environment.js":"4","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\AppBar.tsx":"5","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Login.tsx":"6","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Register.tsx":"7","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitIndex.tsx":"8","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitTable.tsx":"9","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitEdit.tsx":"10","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitPost.tsx":"11","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentIndex.tsx":"12","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentEdit.tsx":"13","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentTable.tsx":"14","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentCreate.tsx":"15","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\Dashboard.tsx":"16"},{"size":516,"mtime":1610681646141,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1732,"mtime":1654906886024,"results":"20","hashOfConfig":"18"},{"size":279,"mtime":1632246643641,"results":"21","hashOfConfig":"18"},{"size":3566,"mtime":1654906777846,"results":"22","hashOfConfig":"18"},{"size":2904,"mtime":1654891519243,"results":"23","hashOfConfig":"18"},{"size":3555,"mtime":1654891595212,"results":"24","hashOfConfig":"18"},{"size":3587,"mtime":1654891012000,"results":"25","hashOfConfig":"18"},{"size":2412,"mtime":1654891011999,"results":"26","hashOfConfig":"18"},{"size":3553,"mtime":1654891012000,"results":"27","hashOfConfig":"18"},{"size":6464,"mtime":1654991668105,"results":"28","hashOfConfig":"18"},{"size":3423,"mtime":1654891101853,"results":"29","hashOfConfig":"18"},{"size":4456,"mtime":1654891106859,"results":"30","hashOfConfig":"18"},{"size":2129,"mtime":1654891089434,"results":"31","hashOfConfig":"18"},{"size":6122,"mtime":1654891113473,"results":"32","hashOfConfig":"18"},{"size":3451,"mtime":1654905669991,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2at1mx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\index.tsx",[],["76","77"],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\App.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\helpers\\environment.js",["78"],"let APIURL = '';\r\n\r\nswitch(window.location.hostname) {\r\n    case 'localhost' || '127.0.0.1':\r\n\r\n    APIURL = 'http://localhost:4000';\r\n    break;\r\n\r\n    case 'mr-bear-cellar.herokuapp.com':\r\n\r\n        APIURL = 'https://mr-bear-cellar.herokuapp.com'\r\n\r\n}\r\n\r\nexport default APIURL;",["79","80"],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\AppBar.tsx",["81"],"import React from 'react';\r\n\r\nimport {\r\n  Tooltip,\r\n  Toolbar,\r\n  AppBar,\r\n  ButtonGroup,\r\n  Grid,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport { Link} from 'react-router-dom'\r\nimport logo from '../../Assets/mrbearscellar.png';\r\nimport './Home.css';\r\n\r\nimport Login from '../Auth/Login';\r\nimport Register from '../Auth/Register';\r\n\r\ninterface Props {\r\n  token: string | null;\r\n  clickLogout: () => void;\r\n  updateToken: (newToken: string) => void;\r\n}\r\n\r\ntype State = {\r\n  register: boolean;\r\n  login: boolean;\r\n  left: boolean;\r\n}\r\n\r\nclass NavBar extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      register: false,\r\n      login: false,\r\n      left: false,\r\n    }\r\n  }\r\n\r\n    handleOpenReg = () => {\r\n      this.setState({\r\n        register: true,\r\n      });\r\n    };\r\n\r\n    handleOpenLog = () => {\r\n      this.setState({\r\n        login: true,\r\n      })\r\n    }\r\n\r\n    HandleCloseReg = () => {\r\n      this.setState({\r\n        register: false,\r\n      })\r\n    }\r\n\r\n    handleCloseLog = () => {\r\n      this.setState({\r\n        login: false,\r\n      })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <Grid container spacing={10} style={{padding: 24}}>\r\n              <Grid item xs={12} sm={6} lg={4} xl={12}>\r\n            <AppBar id=\"appBar\" position=\"fixed\" >\r\n              <Toolbar className=\"root\" >\r\n              <img src={logo} id=\"logo\" alt=\"Logo\" />\r\n              \r\n          <ButtonGroup>\r\n            {!this.props.token && (\r\n              <Register \r\n              updateToken={this.props.updateToken}\r\n              />\r\n            )}\r\n            {this.props.token ? (\r\n              <>\r\n              <List>\r\n                  <ListItem button id=\"myLibrary\">\r\n                  <Link to=\"/submissions\" className=\"links\">\r\n                    <Tooltip title=\"Library\" arrow>\r\n                      <ListItemIcon className=\"drawerIcons\">\r\n                          <LocalLibraryIcon id=\"ishIcons\"/>\r\n                      </ListItemIcon>\r\n                    </Tooltip>\r\n                  </Link>\r\n                  </ListItem>\r\n              </List>\r\n              <Divider />\r\n              <Divider />\r\n              <List>\r\n                  <ListItem button id=\"myComments\">\r\n                  <Link to=\"/comments\" className=\"links\">\r\n                    <Tooltip title=\"Comments\" arrow>\r\n                      <ListItemIcon className=\"drawerIcons\">\r\n                          <NoteIcon id=\"ishIcons\" />\r\n                      </ListItemIcon>\r\n                      </Tooltip>\r\n                  </Link>\r\n                  </ListItem>\r\n              </List>\r\n              <Divider />\r\n                <Tooltip title=\"Logout\" arrow>\r\n                  <IconButton id=\"ishBtn\" aria-label=\"logout\"> \r\n                  <ExitToAppIcon  id=\"ishIcons\" onClick={this.props.clickLogout} />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                \r\n              </>\r\n            ) : (\r\n              <Login \r\n              updateToken={this.props.updateToken} />\r\n            )}\r\n          </ButtonGroup>\r\n              </Toolbar>\r\n            </AppBar>\r\n              </Grid>\r\n            </Grid>\r\n      </div>\r\n        );\r\n      }\r\n};\r\n\r\nexport default (NavBar);","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Login.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Auth\\Register.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitIndex.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitTable.tsx",["82","83"],"import React from 'react';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BorderColorOutlinedIcon from '@material-ui/icons/BorderColorOutlined';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport'./Style.css';\r\nimport APIURL from '../../helpers/environment';\r\n\r\n\r\ntype Props = {\r\n    mySubs: Array<{\r\n        id: number;\r\n        title: string;\r\n        date: string;\r\n        entry: string;\r\n        imageUrl: string;\r\n    }>,\r\n    editUpdateSubmits: (submission: any) => void,\r\n    updateOn: () => void,\r\n    fetchSubs: () => void,\r\n    token: string\r\n\r\n}\r\n\r\nexport default class submissionTable extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    submissionDelete = (submission: any) => {\r\n        fetch(`${APIURL}/submission/delete/${submission.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchSubs())\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n            <Grid container spacing={10} style={{padding: 24}}>\r\n            {this.props.mySubs\r\n            ? this.props.mySubs.map((mySubs) => (\r\n                <Grid item xs={12} sm={6} lg={4} xl={4}>\r\n                    <Card key={mySubs.id} id=\"CardTable\">\r\n                        <CardContent><img src={mySubs.imageUrl} width=\"50%\" height=\"50%\" /></CardContent>\r\n                        <CardContent>{mySubs.title}</CardContent>\r\n                        <CardContent>{mySubs.date}</CardContent>\r\n                        <CardContent>{mySubs.entry}</CardContent>\r\n                        <CardContent>\r\n                            <IconButton id=\"editBtn\" onClick={() => { this.props.editUpdateSubmits(mySubs); this.props.updateOn() }}><BorderColorOutlinedIcon /></IconButton>\r\n                            <IconButton id=\"deleteBtn\" onClick={() => { this.submissionDelete(mySubs)}} ><DeleteOutlineIcon /></IconButton>\r\n                            <hr />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                ))\r\n                : undefined} \r\n\r\n            </Grid>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitEdit.tsx",["84","85"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    fetchSubs: () => void,\r\n    updateOff: () => void,\r\n    token: string,\r\n    submissionUpdate: any,\r\n}\r\n\r\ntype State = {\r\n    title: string;\r\n    date: string;\r\n    entry: string;\r\n    handleopen: boolean,\r\n    \r\n}\r\n\r\nexport default class SubmissionEdit extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.submissionUpdate.title,\r\n            date: this.props.submissionUpdate.date,\r\n            entry: this.props.submissionUpdate.entry,\r\n            handleopen: false,\r\n           \r\n        }\r\n    }\r\n\r\n    handleUpdate = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/submission/update/${this.props.submissionUpdate.id}`, {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            }),\r\n            body: JSON.stringify({title: this.state.title, date: this.state.date, entry: this.state.entry})\r\n        }) .then(() => {\r\n            this.props.updateOff();\r\n            this.props.fetchSubs();\r\n            \r\n        }) \r\n     \r\n    };\r\n\r\n    closeUpdate = () => {\r\n        this.props.updateOff();\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (    \r\n            <div className=\"editContainer\">\r\n                <Dialog open={true} >\r\n                    <DialogTitle id=\"dialogTitle\">Update Submission<IconButton className=\"exit-btn-post-edit\" onClick={this.closeUpdate}><ClearIcon /></IconButton></DialogTitle>\r\n                    <DialogContent id=\"Edit\" >\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit title\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.title}\r\n                            onChange={(event) => this.setState({title: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit date\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.date}\r\n                            onChange={(event) => this.setState({date: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit entry\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.entry}\r\n                            onChange={(event) => {this.setState({entry: event.target.value})}}\r\n                        />\r\n                    </DialogContent>\r\n                        <Button type=\"submit\" id=\"btn\" onClick={this.handleUpdate} >Submit</Button>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Submissions\\SubmitPost.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentIndex.tsx",["86"],"import React from 'react';\r\nimport CommentCreate from './CommentCreate';\r\nimport CommentEdit from './CommentEdit';\r\nimport CommentTable from './CommentTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    token: string;\r\n    // updateToken: (newToken: string) => void,\r\n    // clearToken: () => void,\r\n}\r\n\r\ntype State = {\r\n    myComments: any,\r\n    commentUpdate: any,\r\n    updateActive: boolean,\r\n\r\n}\r\n\r\nexport default class SubmitIndex extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            myComments: [],\r\n            commentUpdate: {},\r\n            updateActive: false,\r\n        }\r\n          \r\n    }\r\n\r\n    fetchComments = () => {\r\n        console.log(this.props.token);\r\n        fetch(`${APIURL}/comment/mine`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `${localStorage.getItem(\"token\")}`\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((subData) => {\r\n                this.setState({\r\n                    myComments: subData.comments\r\n                })\r\n                console.log(\"Comments\", this.state.myComments)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchComments()\r\n    }\r\n\r\n    editUpdateComments = (comments: any) => {\r\n        this.setState({\r\n            commentUpdate: comments\r\n        })\r\n    }\r\n\r\n    editCreateComments = (comments: any) => {\r\n        this.setState({\r\n            commentUpdate: comments\r\n        })\r\n    }\r\n\r\n    updateOn = () => {\r\n        this.setState({\r\n            updateActive: true\r\n        })\r\n    }\r\n\r\n    updateOff = () => {\r\n        this.setState({\r\n            updateActive: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Container\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                            {/* <CommentCreate\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                                token={this.props.token}\r\n                                // updateToken={this.props.updateToken}\r\n                                // clearToken={this.props.clearToken}\r\n                            \r\n                            /> : <> </> */}\r\n                            <CommentTable\r\n                                myComments={this.state.myComments}\r\n                                editUpdateComments={this.editUpdateComments.bind(this)}\r\n                                updateOn={this.updateOn.bind(this)}\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                                token={this.props.token}\r\n                        />\r\n                        {this.state.updateActive ?\r\n                            <CommentEdit\r\n                                commentUpdate={this.state.commentUpdate}\r\n                                updateOff={this.updateOff.bind(this)}\r\n                                token={this.props.token}\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                            />\r\n                            : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentEdit.tsx",[],"C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentTable.tsx",["87"],"import React from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    myComments: Array<{\r\n        id: number;\r\n        username: string;\r\n        date: string;\r\n        entry: string;\r\n        rating: number;\r\n        userId: number;\r\n    }>,\r\n    editUpdateComments: (submission: any) => void,\r\n    updateOn: () => void,\r\n    fetchComments: () => void,\r\n    token: string\r\n}\r\n\r\nexport default class submissionTable extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    commentDelete = (comment: any) => {\r\n        fetch(`${APIURL}/comment/${comment.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchComments())\r\n    };\r\n\r\n        render () {\r\n            return (\r\n                <div>\r\n                {this.props.myComments\r\n                ? this.props.myComments.map((myComments) => (\r\n                    <Card key={myComments.id}>\r\n                        <CardContent>{myComments.username}</CardContent>\r\n                        <CardContent>{myComments.date}</CardContent>\r\n                        <CardContent>{myComments.entry}</CardContent>\r\n                        <CardContent>{myComments.rating}</CardContent>\r\n                        <CardContent>\r\n                            <IconButton onClick={() => { this.props.editUpdateComments(myComments); this.props.updateOn() }}><CreateIcon /></IconButton>\r\n                            <IconButton className=\"delete-btn\" onClick={() => { this.commentDelete(myComments)}} ><ClearIcon /></IconButton>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))\r\n                : undefined} \r\n                </div>  \r\n            )\r\n        }\r\n}\r\n\r\n","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Comments\\CommentCreate.tsx",["88"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    FormLabel,\r\n    FormControl,\r\n    InputLabel,\r\n    Box,\r\n    TextField,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n   DialogActions,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport './Comment.css';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ninterface Props {\r\n    token: string,\r\n    subId: number\r\n    // updateToken: (newToken: string) => void,\r\n    // clearToken: () => void,\r\n}\r\n\r\ntype State = {\r\n    username: string;\r\n    date: string;\r\n    entry: string;\r\n    rating: number;\r\n    submissionId: number;\r\n    handleopen: boolean;\r\n}\r\n\r\nexport default class CommentCreate extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            date: \"\",\r\n            entry: \"\",\r\n            rating: 0,\r\n            submissionId: 0,\r\n            handleopen: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/comment/create/${this.props.subId}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                date: this.state.date,\r\n                entry: this.state.entry,\r\n                rating: this.state.rating,\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                username: '',\r\n                date: '',\r\n                entry: '',\r\n                rating: 0,\r\n            })\r\n            this.handleClose();\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    setUsername(event: string) {\r\n        this.setState({\r\n            username: (event)\r\n        })\r\n    }\r\n\r\n    setDate(event: string) {\r\n        this.setState({\r\n            date: (event)\r\n        })\r\n    }\r\n\r\n    setEntry(event: string) {\r\n        this.setState({\r\n            entry: (event)\r\n        })\r\n    }\r\n\r\n    setRating(event: number) {\r\n        this.setState({\r\n            rating: (event)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                    <Button onClick={this.handleOpen} id=\"CreateBtn\" variant=\"outlined\" >Comment</Button>\r\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\r\n                    <DialogContent id=\"comments\">\r\n                        <Typography variant=\"h6\" id=\"dialogTitle\"><strong>Comment</strong></Typography>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"Username\" id=\"titleLabel\">Username</InputLabel>\r\n                            <TextField\r\n                                id=\"titleInput\"\r\n                                name=\"title\"\r\n                                value={this.state.username}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => this.setUsername(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"date\" id=\"dateLabel\">Date</InputLabel>\r\n                            <TextField\r\n                                id=\"dateInput\"\r\n                                type=\"date\"\r\n                                variant=\"outlined\"\r\n                                defaultValue=\"01/13/2021\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={(e) => this.setDate(e.target.value)}\r\n                            >Date</TextField>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"entry\" id=\"entryLabel\">Entry</InputLabel>\r\n                            <TextField\r\n                                name={this.state.entry}\r\n                                multiline rowsMax={6}\r\n                                variant=\"outlined\"\r\n                                id=\"entryInput\"\r\n                                onChange={(e) => this.setEntry(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormControl component=\"fieldset\" id=\"ratingLabel\">\r\n                            <FormLabel component=\"legend\" id=\"ratingLabel\"><strong>Rating</strong></FormLabel>\r\n                            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" id=\"ratingsBox\">\r\n                                <Rating\r\n                                    name=\"rating\"\r\n                                    value={this.state.rating}\r\n                                    onChange={(e, newValue) =>\r\n                                        this.setState({ rating: Number(newValue) })\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions id=\"commentBtns\">\r\n                        <Box justifyContent=\"center\">\r\n                            <Button onClick={this.handleOpen} className=\"createReviewButton\">\r\n                                <SkipPreviousIcon id=\"backIcon\" />{\" \"}{\" \"}Back</Button>\r\n                            <Button type=\"submit\" className=\"createReviewButton\" id=\"submitButton\"onClick={this.handleSubmit} ><strong>Submit Comment</strong></Button>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div >\r\n        )\r\n    }\r\n}","C:\\Users\\howel\\ElevenFiftyProjects\\WDOctober2020\\Projects\\MrBearCellar\\client\\src\\Components\\Home\\Dashboard.tsx",["89"],"import React from 'react';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from './AppBar';\r\nimport SubmitIndex from '../Submissions/SubmitIndex';\r\nimport CommentIndex from '../Comments/CommentIndex';\r\nimport CommentCreate from '../Comments/CommentCreate';\r\nimport './Home.css';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ninterface Props {\r\n    updateToken: (newToken: string) => void;\r\n    clearToken: () => void;\r\n    token: string,\r\n}\r\n\r\ntype State = {\r\n    allSubs: Array<{\r\n        id: number;\r\n        title: string;\r\n        date: string;\r\n        entry: string;\r\n        imageUrl: string;\r\n        userId: number;\r\n    }>,\r\n    handleopen: boolean,\r\n    submissionCreate: any,\r\n    fetchSubs: any,\r\n}\r\n\r\nexport default class SubmissionIndex extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            allSubs: [],\r\n            handleopen: false,\r\n            submissionCreate: {},\r\n            fetchSubs: '',\r\n        }\r\n    }\r\n\r\n    fetchSubmissions = () => {\r\n        fetch(`${APIURL}/submission/`, {\r\n            method: 'GET',\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    allSubs: data\r\n                })\r\n                console.log(\"response\", data);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSubmissions();\r\n        console.log('props: ', this.props)\r\n        console.log('state: ', this.state)\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Router>\r\n                    <div className=\"Home\">\r\n                        <AppBar clickLogout={this.props.clearToken} updateToken={this.props.updateToken} token={this.props.token} />\r\n                        <CommentIndex token={this.props.token} />\r\n                        <SubmitIndex token={this.props.token} />\r\n                    </div>\r\n                </Router>\r\n                <div className=\"CardCenter\">\r\n                    <Grid container spacing={8} style={{padding: 14}}>\r\n                        {this.state.allSubs.map(allSubs => {\r\n                            return (\r\n                                <Grid item xs={12} sm={6} lg={4} xl={4}>\r\n                                <Card key={allSubs.id} id=\"CardTable\">\r\n                                    <CardContent><img src={allSubs.imageUrl} width=\"50%\" height=\"50%\"/> </CardContent>\r\n                                    <CardContent ><strong>{allSubs.title}</strong></CardContent>\r\n                                    <CardContent >{allSubs.entry}</CardContent>\r\n                                    <CardContent >{allSubs.date}</CardContent>\r\n                                    <CommentCreate subId={allSubs.id} token={this.props.token} />\r\n                                </Card>\r\n                                </Grid>\r\n                            )\r\n                        })};\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":1,"nodeType":"96","messageId":"97","endLine":13,"endColumn":2},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":26,"column":5,"nodeType":"104","messageId":"105","endLine":28,"endColumn":6},{"ruleId":"106","severity":1,"message":"107","line":49,"column":38,"nodeType":"108","endLine":49,"endColumn":92},{"ruleId":"98","severity":1,"message":"109","line":5,"column":5,"nodeType":"100","messageId":"101","endLine":5,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":43,"column":9,"nodeType":"112","messageId":"113","endLine":50,"endColumn":17,"fix":"114"},{"ruleId":"98","severity":1,"message":"115","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":24,"column":5,"nodeType":"104","messageId":"105","endLine":26,"endColumn":6},{"ruleId":"98","severity":1,"message":"116","line":11,"column":5,"nodeType":"100","messageId":"101","endLine":11,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":91,"column":50,"nodeType":"108","endLine":91,"endColumn":104},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","@typescript-eslint/no-unused-vars","'MenuBookIcon' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogActions' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"119","text":"120"},"'CommentCreate' is defined but never used.","'DialogTitle' is defined but never used.","no-global-assign","no-unsafe-negation",[1432,1434],"."]